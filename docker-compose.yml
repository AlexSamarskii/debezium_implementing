services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: app.dockerfile
    ports:
      - "7490:7490"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
        ./migrate -path ./migrations -database 'postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_CONTAINER_PORT/$POSTGRES_DB?sslmode=disable' up &&
        ./.bin http
      "
    networks:
      - debezium

  connector:
    image: debezium/connect:2.5
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-cluster
      CONFIG_STORAGE_TOPIC: connect-configs
      OFFSET_STORAGE_TOPIC: connect-offsets
      STATUS_STORAGE_TOPIC: connect-status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      PLUGIN_PATH: /kafka/connect
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - debezium

  postgres:
    image: debezium/postgres:16
    ports:
      - "5432:5432"
    env_file: .env
    command: >
      postgres -c wal_level=logical
               -c max_wal_senders=8
               -c max_replication_slots=8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d debezium"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - debezium

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - debezium

  kafka:
    image: confluentinc/cp-kafka:7.3.3
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_JVM_PERFORMANCE_OPTS: "-Xmx512m -Xms512m"
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server kafka:9092"]
      interval: 10s
      timeout: 10s
      retries: 6
    networks:
      - debezium

  elasticsearch:
    image: elasticsearch:8.11.3
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - cluster.name=debezium-cluster
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://elasticsearch:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - debezium

  kibana:
    image: kibana:8.11.3
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - debezium

networks:
  debezium:
    driver: bridge